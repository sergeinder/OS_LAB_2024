Ответить на следующие вопросы:

1. Что делают оба приложения?
- Оба приложения являются клиент-серверными приложениями. Сервер слушает сообщения от клиента. Но используются разные протоколы

2. Что произойдет, если tcpclient отправит сообщение незапущенному серверу?
- Согласно протоколу tcp, он не подключится даже к серверу, выведя нам сообщение об этом, т.к. не получит сообщений

3. Что произойдет, если udpclient отправит сообщение незапущенному серверу? 
- Ничего, ведь согласно протоколу udp, клиент не удостоверяется в том, что подключение было осуществлено

4. Что произойдет, если tcpclient отвалится во время работы с сервером?
- Сервер будет ожидать принятия сообщения от клиента

5. Что произойдет, если udpclient отвалится во время работы с сервером?
- Сервер будет ожидать принятия сообщения от клиента

6. Что произойдет, если udpclient отправит сообщение на несуществующий / выключенный сервер?
- Сообщения о том, что сервер не получил сообщения не будет получено
Если же пакеты потеряются, то UDP не инициирует повторную отправку пакетов

7. Что произойдет, если tcpclient отправит сообщение на несуществующий / выключенный сервер?
- Согласно протоколу tcp, он не подключится даже к серверу, выведя нам сообщение об этом, т.к. не получит сообщений.
Если же пакеты потеряются, то tcp инициирует повторную отправку пакетов

8. В чем отличия UDP и TCP протколов?
Отличие TCP от UDP
Надежность:
TCP:
Гарантирует надежную передачу данных. Если пакет данных потерян, поврежден или прибыл не в том порядке, TCP обнаруживает это и запрашивает повторную передачу.
Использует механизмы подтверждения получения (ACK), повторной передачи и упорядочивания пакетов.
UDP:
Не гарантирует надежную передачу данных. Пакеты могут быть потеряны, повреждены или прибыть не в том порядке.
Не использует механизмы подтверждения получения, повторной передачи или упорядочивания пакетов.

Установление соединения:
TCP:
Устанавливает соединение между отправителем и получателем с помощью трехстороннего рукопожатия (SYN, SYN-ACK, ACK) перед началом передачи данных.
UDP:
Не устанавливает соединение. Данные отправляются без предварительного рукопожатия.

Потоковое управление:
TCP:
Управляет потоком данных, чтобы предотвратить перегрузку сети или получателя. Использует механизмы управления потоком, такие как окно передачи (window size).
UDP:
Не управляет потоком данных. Отправитель может отправлять данные с любой скоростью, не заботясь о том, готов ли получатель к приему.

Управление перегрузкой:
TCP:
Включает механизмы управления перегрузкой, такие как медленный старт (slow start) и предотвращение перегрузки (congestion avoidance), чтобы предотвратить перегрузку сети.
UDP:
Не включает механизмы управления перегрузкой. Отправитель может отправлять данные с любой скоростью, что может привести к перегрузке сети.

Последовательная передача:
TCP:
Гарантирует, что данные будут доставлены в том порядке, в котором они были отправлены. Каждый пакет данных имеет порядковый номер, который используется 
для упорядочивания пакетов при их получении.
UDP:
Не гарантирует последовательную передачу данных. Пакеты могут прибыть в произвольном порядке.

Задержки:
TCP:
Вносит задержки из-за механизмов надежности, таких как подтверждение получения и повторная передача.
UDP:
Обычно имеет меньшие задержки, так как не использует механизмы надежности.

Применение:
TCP:
Используется в приложениях, где важна надежность передачи данных, таких как веб-браузеры (HTTP, HTTPS), электронная почта (SMTP, POP3, IMAP), 
файловые передачи (FTP), удаленный доступ (SSH, Telnet).
UDP:
Используется в приложениях, где важна скорость передачи данных и некритичны потери пакетов, таких как потоковое видео (VoD), онлайн-игры, VoIP 
(голосовая связь через интернет), DNS (Domain Name System).