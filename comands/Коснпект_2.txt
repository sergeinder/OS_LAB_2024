Разница между кучей и стеком
Для каждого потока выделяется стек RAM, в который попадают статические переменные. 
А куча - это гораздо большая область памяти, которая отвечает за динамическопе выделение памяти.

Использование аргументов командной строки 
В функции main int argc - колличество команд, а char *argv[] - список самих команд

Основы работы компилятора: препроцессор, компилятор, линковщик. Их роли и порядок работы
- Препроцессор делает текстовые преобразования исходного .c файла (в т.ч. вставляет текст из #include) и результат передается на вход компилятору.
- Компилятор преобразует свой вход (программу на языке Си) в объектный файл (.o), который содержит константы, 
машинные команды и таблицу внешних символов (переменные и функции к которым обращается этот исходный код, но которые в нем не определены).
- Линковщик (редактор связей) на основе результатов компилятора (.o файлы) и известных ему библиотек 
(по сути это те же .о файлы, но специальным образом скомпонованные) создает исполняемый файл (в винде .exe) или разделяемую библиотеку 
(в винде .dll, в *nix .so). При этом происходит так называемое разрешение внешних имен, т.е. ранее известные только по именам функции и внешние 
переменные обретают адреса и в соответствии с этим меняется код объектного файла (сами .o, естественно, не изменяются).

Отличие статической линсковки от динамической:
При динамической компоновке код библиотеки помещается во внешний модуль (dll), связывание с которым происходит на этапе выполнения. 
Отсюда и название - динамическая.
При статической компоновке код библиотеки собирается вместе с клиентским кодом, как одно целое. 

Опции компилятора: -I, -L, -l, -shared, -o, -с, -fPIC

-I Используется для добавления ваших собственных каталогов для поиска заголовочных файлов в процессе сборки
-L Передается компоновщику. Используется для добавления ваших собственных каталогов для поиска библиотек в процессе сборки.
-l Передается компоновщику. Используется для добавления ваших собственных библиотек для поиска в процессе сборки
-shared - указывает gcc, что в результате должен быть собран не исполняемый файл, а разделяемый объект - динамическая библиотека.
-o file-name Использовать file-name в качестве имени для создаваемого gcc файла (обычно это исполняемый файл).
-c Только компиляция. Из исходных файлов программы создаются объектные файлы в виде name.o. Компоновка не производится.
-fPIC (Position Independent Code) Генерирует код, который может быть загружен в любое место памяти (необходимо для создания разделяемых библиотек).

Команда ar позволяет использовать утилиту для архивации данных с соответствующим именем. 
Эта утилита поддерживает собственный формат архивов (.a или .ar)

Переменная окружения LD_LIBRARY_PATH - это список отделённых  двоеточиями  имён каталогов, где библиотеки следует искать
перед тем, как их будут искать по стандартным путям.